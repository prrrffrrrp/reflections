  - When would you want to use a remote repository rather than keeping all your
  work local?
     A remote repository could be a must when working with others. Also, it can
     be convenient to have ones files in the cloud and being able to access
     them from anywhere.

  -Why might you want to always pull changes manually rather than having Git
  automatically stay up-to-date with your remote repository?

    The remote repository is public. Anyone can see it. Maybe you don't want to
    show everything you do.

  - Describe the differences between forks, clones and branches. When would you
    use one instead of another?

      Branches are like new paths that one can open at some point of the log
      history. There's already some work done and we can continue this work in
      parallell in two different branches beacause (maybe) we are trying to
      achieve two different things or to achieve it in two different maners.

      A clone is a copy of a repository. It is a start. 

      Forks are kinda GitHub clones. But they have some features that clones
      don't have. For example, GitHub can track the number of forks done in a repository.

  - What is the benefit of having a copy of the last known state of the remote
    stored locally?

     That means that you area up to date. Hopefully you have solved any
     existing conflicts. That makes the next merges easier.

  - How would you collaborate without using Git or GitHub? What would be
    easier, and what would be harder?

      The easier thing would be to post the code on an online platform and to guarantee
      access to all the collaborators.
      The hardest would be using telepathy.
